#!/bin/bash

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Å Azure
# –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ)
RESOURCE_GROUP="scientific-api"
SUBSCRIPTION_ID="8e746503-c0c0-4535-a05d-49e544196e3f"
CONTAINER_NAME="scientific-api-heavy"
LOCATION="eastus"
REGISTRY_NAME="scientificapi$(date +%s)"

echo -e "${GREEN}=== –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Scientific API –≤ Azure ===${NC}"
echo -e "${BLUE}Resource Group: $RESOURCE_GROUP${NC}"
echo -e "${BLUE}Subscription: $SUBSCRIPTION_ID${NC}"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è Enter
wait_for_enter() {
    echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: Azure CLI
echo -e "${YELLOW}–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Azure CLI...${NC}"
if ! command -v az &> /dev/null; then
    echo -e "${RED}‚ùå Azure CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Azure CLI...${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        brew install azure-cli
    else
        # Linux
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    fi
else
    echo -e "${GREEN}‚úÖ Azure CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: Docker
echo -e "${YELLOW}–®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...${NC}"
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo -e "${YELLOW}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞${NC}"
    echo -e "${BLUE}https://www.docker.com/products/docker-desktop${NC}"
    exit 1
fi

if ! docker info &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    echo -e "${YELLOW}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Azure
echo -e "${YELLOW}–®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Azure...${NC}"
if ! az account show &> /dev/null; then
    echo -e "${RED}‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Azure${NC}"
    echo -e "${YELLOW}–í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...${NC}"
    az login
else
    echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Azure –≤—ã–ø–æ–ª–Ω–µ–Ω–∞${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É...${NC}"
az account set --subscription $SUBSCRIPTION_ID
echo -e "${GREEN}‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: Resource Group
echo -e "${YELLOW}–®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Resource Group...${NC}"
if az group show --name $RESOURCE_GROUP &> /dev/null; then
    echo -e "${GREEN}‚úÖ Resource Group '$RESOURCE_GROUP' –Ω–∞–π–¥–µ–Ω–∞${NC}"
else
    echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º Resource Group...${NC}"
    az group create --name $RESOURCE_GROUP --location $LOCATION
    echo -e "${GREEN}‚úÖ Resource Group —Å–æ–∑–¥–∞–Ω–∞${NC}"
fi

echo ""
echo -e "${BLUE}=== –ì–æ—Ç–æ–≤—ã –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é ===${NC}"
wait_for_enter

# –°–æ–∑–¥–∞–Ω–∏–µ Container Registry
echo -e "${YELLOW}–®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ Container Registry...${NC}"
if az acr show --name $REGISTRY_NAME --resource-group $RESOURCE_GROUP &> /dev/null; then
    echo -e "${GREEN}‚úÖ Registry —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
else
    echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º Container Registry (—ç—Ç–æ –∑–∞–π–º–µ—Ç 2-3 –º–∏–Ω—É—Ç—ã)...${NC}"
    az acr create --resource-group $RESOURCE_GROUP --name $REGISTRY_NAME --sku Basic --admin-enabled true
    echo -e "${GREEN}‚úÖ Container Registry —Å–æ–∑–¥–∞–Ω${NC}"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ö–æ–¥–∞
ACR_LOGIN_SERVER=$(az acr show --name $REGISTRY_NAME --resource-group $RESOURCE_GROUP --query "loginServer" --output tsv)
ACR_USERNAME=$(az acr credential show --name $REGISTRY_NAME --query "username" --output tsv)
ACR_PASSWORD=$(az acr credential show --name $REGISTRY_NAME --query "passwords[0].value" --output tsv)

echo -e "${GREEN}‚úÖ Registry: $ACR_LOGIN_SERVER${NC}"

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
echo -e "${YELLOW}–®–∞–≥ 6: –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...${NC}"
echo -e "${YELLOW}–≠—Ç–æ –∑–∞–π–º–µ—Ç 5-10 –º–∏–Ω—É—Ç...${NC}"
docker build -f docker/heavy-compute.dockerfile -t scientific-api-heavy:latest .

# –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Registry
echo -e "${YELLOW}–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏...${NC}"
docker tag scientific-api-heavy:latest $ACR_LOGIN_SERVER/scientific-api-heavy:latest

# –í—Ö–æ–¥ –≤ Registry
echo -e "${YELLOW}–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Container Registry...${NC}"
az acr login --name $REGISTRY_NAME

# –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞
echo -e "${YELLOW}–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ (—ç—Ç–æ –∑–∞–π–º–µ—Ç 5-10 –º–∏–Ω—É—Ç)...${NC}"
docker push $ACR_LOGIN_SERVER/scientific-api-heavy:latest
echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${YELLOW}–®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
if [[ -z "$ADSABS_TOKEN" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ADSABS_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë: export ADSABS_TOKEN='your_token'${NC}"
fi

if [[ -z "$SERPAPI_KEY" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è SERPAPI_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
fi

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo -e "${YELLOW}–®–∞–≥ 8: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...${NC}"
echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å 12 CPU –∏ 20GB RAM...${NC}"

az container create \
    --resource-group $RESOURCE_GROUP \
    --name $CONTAINER_NAME \
    --image $ACR_LOGIN_SERVER/scientific-api-heavy:latest \
    --registry-login-server $ACR_LOGIN_SERVER \
    --registry-username $ACR_USERNAME \
    --registry-password $ACR_PASSWORD \
    --cpu 12 \
    --memory 20 \
    --dns-name-label scientific-api-heavy-$(date +%s) \
    --ports 8000 \
    --environment-variables \
        ENVIRONMENT=production \
        ADSABS_TOKEN="$ADSABS_TOKEN" \
        SERPAPI_KEY="$SERPAPI_KEY" \
        GOOGLE_CLIENT_ID="$GOOGLE_CLIENT_ID" \
        GOOGLE_CLIENT_SECRET="$GOOGLE_CLIENT_SECRET" \
        GOOGLE_REFRESH_TOKEN="$GOOGLE_REFRESH_TOKEN" \
    --restart-policy Always

# –ü–æ–ª—É—á–µ–Ω–∏–µ URL
FQDN=$(az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query "ipAddress.fqdn" --output tsv)

echo ""
echo -e "${GREEN}üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${GREEN}URL –≤–∞—à–µ–≥–æ API: http://$FQDN:8000${NC}"
echo -e "${GREEN}Health check: http://$FQDN:8000/ping${NC}"
echo ""

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo -e "${YELLOW}–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (30 —Å–µ–∫—É–Ω–¥)...${NC}"
sleep 30

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...${NC}"
if curl -f "http://$FQDN:8000/ping" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    echo ""
    echo -e "${BLUE}=== –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===${NC}"
    echo -e "${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:${NC}"
    echo "az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME"
    echo ""
    echo -e "${YELLOW}–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC}"
    echo "az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME"
    echo ""
    echo -e "${YELLOW}–î–ª—è Vercel –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:${NC}"
    echo "HEAVY_COMPUTE_URL=http://$FQDN:8000"
else
    echo -e "${RED}‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:${NC}"
    echo "az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME"
fi 