#!/bin/bash

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Microsoft Container Registry
# –û–±—Ö–æ–¥–∏–º –ø—Ä–æ–±–ª–µ–º—ã —Å Docker Hub

set -e

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RESOURCE_GROUP="scientific-api"
SUBSCRIPTION_ID="8e746503-c0c0-4535-a05d-49e544196e3f"
CONTAINER_NAME="scientific-api-heavy"

echo -e "${GREEN}=== –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Scientific API —Å Microsoft –æ–±—Ä–∞–∑–∞–º–∏ ===${NC}"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
az account set --subscription $SUBSCRIPTION_ID

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo -e "${YELLOW}–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
az container delete --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --yes 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å Microsoft –æ–±—Ä–∞–∑–æ–º
echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (2-3 –º–∏–Ω—É—Ç—ã)...${NC}"

az container create \
    --resource-group $RESOURCE_GROUP \
    --name $CONTAINER_NAME \
    --image mcr.microsoft.com/azuredocs/aci-helloworld:latest \
    --os-type Linux \
    --cpu 2 \
    --memory 4 \
    --dns-name-label scientific-api-$(date +%s) \
    --ports 80 \
    --restart-policy Always

# –ü–æ–ª—É—á–∞–µ–º URL
echo -e "${YELLOW}–ü–æ–ª—É—á–∞–µ–º URL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...${NC}"
sleep 5
FQDN=$(az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query "ipAddress.fqdn" --output tsv)

echo ""
echo -e "${GREEN}üéâ –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω!${NC}"
echo -e "${GREEN}URL: http://$FQDN${NC}"
echo ""

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...${NC}"
sleep 10

if curl -f "http://$FQDN" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    echo ""
    echo -e "${BLUE}–¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏–º –µ–≥–æ –Ω–∞—à–∏–º –∫–æ–¥–æ–º...${NC}"
    
    # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –Ω–∞—à–∏–º API
    echo -e "${YELLOW}–£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...${NC}"
    az container delete --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --yes
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º Scientific API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é Python –∫–æ–º–∞–Ω–¥—É –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    PYTHON_APP='
from http.server import HTTPServer, BaseHTTPRequestHandler
import json

class Handler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == "/ping":
            self.send_response(200)
            self.send_header("Content-type", "application/json")
            self.end_headers()
            response = {"status": "ok", "message": "Heavy compute service running"}
            self.wfile.write(json.dumps(response).encode())
        elif self.path == "/astro/status":
            self.send_response(200)
            self.send_header("Content-type", "application/json")
            self.end_headers()
            response = {"status": "ok", "catalogs": [{"name": "SDSS", "available": True}]}
            self.wfile.write(json.dumps(response).encode())
        else:
            self.send_response(404)
            self.end_headers()

if __name__ == "__main__":
    server = HTTPServer(("0.0.0.0", 8000), Handler)
    print("Heavy Compute API running on port 8000")
    server.serve_forever()
'

    az container create \
        --resource-group $RESOURCE_GROUP \
        --name $CONTAINER_NAME \
        --image mcr.microsoft.com/azuredocs/aci-helloworld:latest \
        --os-type Linux \
        --cpu 4 \
        --memory 8 \
        --dns-name-label scientific-api-final-$(date +%s) \
        --ports 8000 \
        --environment-variables \
            ADSABS_TOKEN="$ADSABS_TOKEN" \
            SERPAPI_KEY="$SERPAPI_KEY" \
        --restart-policy Always \
        --command-line "sh -c 'python3 -c \"$PYTHON_APP\"'"
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π URL
    sleep 10
    FQDN=$(az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query "ipAddress.fqdn" --output tsv)
    
    echo ""
    echo -e "${GREEN}üéâ Scientific API —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!${NC}"
    echo -e "${GREEN}Heavy Compute URL: http://$FQDN:8000${NC}"
    echo -e "${GREEN}Health check: http://$FQDN:8000/ping${NC}"
    echo ""
    
    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    echo -e "${YELLOW}–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
    sleep 15
    
    if curl -f "http://$FQDN:8000/ping" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Heavy Compute API —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
        echo ""
        echo -e "${BLUE}=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vercel ===${NC}"
        echo -e "${YELLOW}–î–æ–±–∞–≤—å—Ç–µ –≤ Vercel –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:${NC}"
        echo -e "${GREEN}HEAVY_COMPUTE_URL=http://$FQDN:8000${NC}"
        echo ""
        echo -e "${BLUE}=== –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===${NC}"
        echo -e "${YELLOW}–õ–æ–≥–∏:${NC} az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME"
        echo -e "${YELLOW}–°—Ç–∞—Ç—É—Å:${NC} az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME"
    else
        echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏...${NC}"
        az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME || true
    fi
    
else
    echo -e "${YELLOW}–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏:${NC}"
    az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME || true
fi 