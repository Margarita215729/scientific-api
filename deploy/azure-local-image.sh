#!/bin/bash

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Azure –∏—Å–ø–æ–ª—å–∑—É—è –ª–æ–∫–∞–ª—å–Ω—ã–π Docker –æ–±—Ä–∞–∑
# –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ Docker Hub
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã: 1 CPU, 1.5GB RAM

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RESOURCE_GROUP="scientific-api"
SUBSCRIPTION_ID="8e746503-c0c0-4535-a05d-49e544196e3f"
CONTAINER_NAME="scientific-api-local"
LOCATION="eastus"

# –õ–æ–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –∏ ACR –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LOCAL_IMAGE_TAG="scientific-api:latest"                          # –¢–µ–≥ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
ACR_NAME="scientificapiacr"                                      # –ò–º—è Azure Container Registry
ACR_IMAGE="${ACR_NAME}.azurecr.io/scientific-api:latest"         # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –æ–±—Ä–∞–∑–∞ –≤ ACR

echo -e "${GREEN}=== –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Scientific API —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º Docker ===${NC}"
echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Å—É—Ä—Å—ã: 1 CPU, 1.5GB RAM –≤ —Ä–µ–≥–∏–æ–Ω–µ $LOCATION${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞...${NC}"
if ! docker images | grep -q "$LOCAL_IMAGE_TAG"; then
    echo -e "${RED}–û–±—Ä–∞–∑ $LOCAL_IMAGE_TAG –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:${NC}"
    echo -e "${YELLOW}docker build -t $LOCAL_IMAGE_TAG .${NC}"
    exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
LOCAL_IMAGE_ID=$(docker images $LOCAL_IMAGE_TAG --quiet)
if [ -z "$LOCAL_IMAGE_ID" ]; then
    echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –æ–±—Ä–∞–∑–∞ $LOCAL_IMAGE_TAG${NC}"
    exit 1
fi
echo -e "${GREEN}–ù–∞–π–¥–µ–Ω –æ–±—Ä–∞–∑ —Å ID: $LOCAL_IMAGE_ID${NC}"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –æ–±—Ä–∞–∑–∞
IMAGE_ARCH=$(docker inspect --format '{{.Architecture}}' $LOCAL_IMAGE_ID)
echo -e "${YELLOW}–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –æ–±—Ä–∞–∑–∞: $IMAGE_ARCH${NC}"

# –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
echo -e "${BLUE}–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ Azure...${NC}"
az account set --subscription $SUBSCRIPTION_ID
echo -e "${GREEN}–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: $SUBSCRIPTION_ID${NC}"

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ä–µ—Å—É—Ä—Å–æ–≤
echo -e "${BLUE}–®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"
if az group show --name $RESOURCE_GROUP &>/dev/null; then
    echo -e "${GREEN}–ì—Ä—É–ø–ø–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ $RESOURCE_GROUP —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.${NC}"
else
    echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ä–µ—Å—É—Ä—Å–æ–≤ $RESOURCE_GROUP –≤ $LOCATION...${NC}"
    az group create --name $RESOURCE_GROUP --location $LOCATION
    echo -e "${GREEN}–ì—Ä—É–ø–ø–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ $RESOURCE_GROUP —Å–æ–∑–¥–∞–Ω–∞.${NC}"
fi

# –®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${BLUE}–®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER_NAME...${NC}"
if az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query name -o tsv 2>/dev/null; then
    echo -e "${YELLOW}–£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME...${NC}"
    az container delete --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --yes
    echo -e "${GREEN}–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è (30 —Å–µ–∫)...${NC}"
    sleep 30
else
    echo -e "${GREEN}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.${NC}"
fi

# –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ Azure Container Registry (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
echo -e "${BLUE}–®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ Azure Container Registry...${NC}"
if az acr show --name $ACR_NAME --resource-group $RESOURCE_GROUP &>/dev/null; then
    echo -e "${GREEN}Azure Container Registry $ACR_NAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.${NC}"
else
    echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ Azure Container Registry $ACR_NAME...${NC}"
    az acr create --resource-group $RESOURCE_GROUP --name $ACR_NAME --sku Basic --admin-enabled true
    echo -e "${GREEN}Azure Container Registry $ACR_NAME —Å–æ–∑–¥–∞–Ω.${NC}"
fi

# –®–∞–≥ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ACR
echo -e "${BLUE}–®–∞–≥ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ACR...${NC}"
ACR_USERNAME=$(az acr credential show --name $ACR_NAME --query "username" -o tsv)
ACR_PASSWORD=$(az acr credential show --name $ACR_NAME --query "passwords[0].value" -o tsv)
echo -e "${GREEN}–£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ACR –ø–æ–ª—É—á–µ–Ω—ã.${NC}"

# –®–∞–≥ 6: –ü–æ–º–µ—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
echo -e "${BLUE}–®–∞–≥ 6: –ü–æ–º–µ—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ ACR...${NC}"
docker tag $LOCAL_IMAGE_ID $ACR_IMAGE
echo -e "${GREEN}–û–±—Ä–∞–∑ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ $ACR_IMAGE${NC}"

# –®–∞–≥ 7: –í—Ö–æ–¥ –≤ ACR
echo -e "${BLUE}–®–∞–≥ 7: –í—Ö–æ–¥ –≤ Azure Container Registry...${NC}"
echo $ACR_PASSWORD | docker login $ACR_NAME.azurecr.io --username $ACR_USERNAME --password-stdin
echo -e "${GREEN}–í—Ö–æ–¥ –≤ ACR –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ.${NC}"

# –®–∞–≥ 8: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ ACR
echo -e "${BLUE}–®–∞–≥ 8: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ ACR (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)...${NC}"
docker push $ACR_IMAGE
echo -e "${GREEN}–û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ ACR.${NC}"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –û–° –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
OS_TYPE="Linux"

# –®–∞–≥ 9: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ Azure
echo -e "${BLUE}–®–∞–≥ 9: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ Azure –∏–∑ –æ–±—Ä–∞–∑–∞ –≤ ACR...${NC}"
az container create \
    --resource-group $RESOURCE_GROUP \
    --name $CONTAINER_NAME \
    --image $ACR_IMAGE \
    --os-type $OS_TYPE \
    --cpu 1 \
    --memory 1.5 \
    --registry-login-server $ACR_NAME.azurecr.io \
    --registry-username $ACR_USERNAME \
    --registry-password $ACR_PASSWORD \
    --dns-name-label scientific-api-local-$(date +%s) \
    --ports 8000 \
    --environment-variables \
        ADSABS_TOKEN="pDbJnrgwpsZYj14Vbkn1LmMCjdiIxXrgUcrdLvjk" \
        SERPAPI_KEY="12ad8fb8fbcd01088827b7d3143de6d9fa15c571dc11ac0daf7f24b25097fac8" \
    --restart-policy Always

# –®–∞–≥ 10: –ü–æ–ª—É—á–µ–Ω–∏–µ FQDN
echo -e "${BLUE}–®–∞–≥ 10: –ü–æ–ª—É—á–µ–Ω–∏–µ URL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...${NC}"
echo -e "${YELLOW}–û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è IP –∞–¥—Ä–µ—Å–∞ (–¥–æ 60 —Å–µ–∫—É–Ω–¥)...${NC}"
FQDN=""
for i in {1..12}; do
    FQDN=$(az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query "ipAddress.fqdn" --output tsv 2>/dev/null)
    if [ ! -z "$FQDN" ]; then
        break
    fi
    echo -e "${YELLOW}–ü–æ–ø—ã—Ç–∫–∞ $i/12: FQDN –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∂–¥–µ–º 5 —Å–µ–∫—É–Ω–¥...${NC}"
    sleep 5
done

if [ -z "$FQDN" ]; then
    echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å FQDN –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER_NAME.${NC}"
    echo -e "${RED}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}üéâ Scientific API —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞!${NC}"
echo -e "${GREEN}–ë–∞–∑–æ–≤—ã–π URL: http://$FQDN:8000${NC}"
echo -e "${GREEN}–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://$FQDN:8000/docs${NC}"
echo ""

# –®–∞–≥ 11: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
echo -e "${BLUE}–®–∞–≥ 11: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 120 —Å–µ–∫—É–Ω–¥)...${NC}"
API_HEALTHY=false
for i in {1..24}; do
    echo -e "${YELLOW}–ü–æ–ø—ã—Ç–∫–∞ $i/24 - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...${NC}"
    if curl -fsS "http://$FQDN:8000/ping" > /tmp/ping_result.json 2>&1; then
        echo -e "${GREEN}‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç:${NC}"
        cat /tmp/ping_result.json | jq '.' 2>/dev/null || cat /tmp/ping_result.json
        echo ""
        API_HEALTHY=true
        break
    else
        echo -e "${YELLOW}API –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ curl: $?${NC}"
    fi    
    sleep 5
done

if ! $API_HEALTHY; then
    echo -e "${RED}API –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.${NC}"
    echo -e "${RED}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC}"
    az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME
    echo -e "${RED}–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC}"
    az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query "instanceView.state" -o tsv
    exit 1
fi

echo -e "${GREEN}üéØ –£—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ Azure!${NC}"
echo ""
echo -e "${BLUE}=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vercel (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è) ===${NC}"
echo -e "${YELLOW}–î–æ–±–∞–≤—å—Ç–µ –≤ Vercel –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:${NC}"
echo -e "${GREEN}HEAVY_COMPUTE_URL=http://$FQDN:8000${NC}"

echo ""
echo -e "${BLUE}=== –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===${NC}"
echo -e "${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:${NC} az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --follow"
echo -e "${YELLOW}–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC} az container show --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --query 'instanceView.state'"
echo -e "${YELLOW}–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:${NC} az container delete --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME --yes"
echo -e "${YELLOW}–£–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–∑ –∏–∑ ACR:${NC} az acr repository delete --name $ACR_NAME --image scientific-api:latest --yes"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
rm -f /tmp/ping_result.json

echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.${NC}"
exit 0 