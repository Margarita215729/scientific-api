#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_endpoint(url, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            print(f"‚úÖ {description}: OK")
            return True
        else:
            print(f"‚ùå {description}: HTTP {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå {description}: Error - {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...\n")
    
    tests = [
        (f"{BASE_URL}/ping", "Ping endpoint"),
        (f"{BASE_URL}/status", "Status endpoint"),
        (f"{BASE_URL}/api", "API info endpoint"),
        (f"{BASE_URL}/astro/status", "Astro status"),
        (f"{BASE_URL}/astro/statistics", "Astro statistics"),
        (f"{BASE_URL}/astro/galaxies?limit=3", "Galaxy data"),
        (f"{BASE_URL}/ads/search-by-coordinates?ra=150.1&dec=2.2", "ADS search by coordinates"),
        (f"{BASE_URL}/ads/search-by-object?object_name=M31", "ADS search by object"),
        (f"{BASE_URL}/ads/search-by-catalog?catalog=SDSS", "ADS search by catalog"),
        (f"{BASE_URL}/ads/large-scale-structure", "ADS large-scale structure"),
    ]
    
    passed = 0
    total = len(tests)
    
    for url, description in tests:
        if test_endpoint(url, description):
            passed += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è")

if __name__ == "__main__":
    main() 